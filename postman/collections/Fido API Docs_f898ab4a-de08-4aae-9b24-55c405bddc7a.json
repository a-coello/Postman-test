{
	"info": {
		"_postman_id": "6c38e5e7-d235-4963-82fa-c358fa2b69a2",
		"name": "Fido API Docs",
		"description": "\n\n<table>\n    <tr>\n        <td width=\"75\"><img src=\"https://www.fido.tech/wp-content/uploads/2021/01/image.png\" alt=\"FIDO\" /> </td>\n        <td valign=\"middle\"> <h2>FIDO API let you access to database information</h2></td>\n    </tr>\n</table>\n\n<!-- <table>\n    <thead>\n        <tr>\n            <th>End Point</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr style=\"background-color:teal\">\n            <td>Users</td>\n            <td>Get users information</td>\n        </tr>\n        <tr style=\"background-color:coral\">\n            <td>LeakAlarm</td>\n            <td>Get Leak Alarms information</td>\n        </tr>\n        <tr style=\"background-color:teal\">\n            <td>Devices/Bugs</td>\n            <td>Get Bugs information</td>\n        </tr>\n        <tr style=\"background-color:coral;\">\n            <td>AI</td>\n            <td>AI prediction</td>\n        </tr>\n    </tbody>\n</table>   -->\n\n\nContact Support:\n Name: Fido Tech\n Email: sales@fido.tech",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "Get Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "615b8bf9-c17c-4f1c-adde-d0cf6a9fd0e6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4eb5ad17-588e-438a-8696-223339453b07",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										""
									]
								},
								"description": "# Returns all the mobile app users for the organization.\n\n## Returns\n ********* \n**List[Users]**"
							},
							"response": [
								{
									"id": "332edb16-eacc-4643-bc75-87bab7500358",
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"user_id\": \"12345\",\n    \"first_name\": \"Stanislaw\",\n    \"surname\": \"Lem\",\n    \"company\": \"MartianWaterCompany\",\n    \"email\": \"slem@martianwater.mart\",\n    \"LOM\": \"\",\n    \"phone\": \"0123456789\"\n  },\n  {\n    \"user_id\": \"12345\",\n    \"first_name\": \"Stanislaw\",\n    \"surname\": \"Lem\",\n    \"company\": \"MartianWaterCompany\",\n    \"email\": \"slem@martianwater.mart\",\n    \"LOM\": \"\",\n    \"phone\": \"0123456789\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c878ed3-4f9c-4069-ab08-6bb0c6b96ddf",
										"exec": [
											"pm.test(\"Status code is 405 - not allowed\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});\r",
											"\r",
											"pm.test(\"Mail already exists\", function () {\r",
											"    var jsonData = pm.response.text();\r",
											"    pm.expect(jsonData).to.include(\"already exists\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a5580c9-231b-40e1-b7a7-1a7d43bdc85c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"New\", \"surname\": \"user\", \"email\": \"alik69@msn.com\", \"LOM\": \"\", \"phone\": \"99999999999\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										""
									]
								},
								"description": "# Create a new user for the current organization.\n\n## **We need to pass the user data in the request body.**\n\n## Returns\n ********* \n**Created**"
							},
							"response": [
								{
									"id": "39bf83af-2136-4af1-ba6b-02449647822d",
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"amet consequat aute\",\n  \"surname\": \"qui irure\",\n  \"email\": \"M9gLoec2csoX@idITtiLWaWxKolVxTOhebUE.jy\",\n  \"LOM\": \"ipsum est\",\n  \"phone\": \"laboris irure in cupidatat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{}"
								},
								{
									"id": "18f2f6a3-a5e1-4422-ae91-297363becd8b",
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"amet consequat aute\",\n  \"surname\": \"qui irure\",\n  \"email\": \"M9gLoec2csoX@idITtiLWaWxKolVxTOhebUE.jy\",\n  \"LOM\": \"ipsum est\",\n  \"phone\": \"laboris irure in cupidatat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												""
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit sunt pariatur sint\",\n        \"in sit\"\n      ],\n      \"msg\": \"nostrud non deserunt mollit\",\n      \"type\": \"sunt enim fugiat mollit\"\n    },\n    {\n      \"loc\": [\n        \"labore aliquip\",\n        \"ut culpa ipsum officia\"\n      ],\n      \"msg\": \"consectetur Lorem eiusmod culpa commodo\",\n      \"type\": \"in volupta\"\n    }\n  ]\n}"
								},
								{
									"id": "947f10ca-b68a-4d33-a471-6b9427ad74fd",
									"name": "Create User",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"amet consequat aute\",\n  \"surname\": \"qui irure\",\n  \"email\": \"acoello@fido.tech\",\n  \"LOM\": \"ipsum est\",\n  \"phone\": \"laboris irure in cupidatat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/v1/users/",
											"host": [
												"{{url}}"
											],
											"path": [
												"v1",
												"users",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": "\t{}"
								}
							]
						},
						{
							"name": "Update User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c65f28e3-79fb-43d8-a766-27cddf5ce30e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "58bb0798-576b-4688-ab1a-22f44ee33d87",
										"exec": [
											"// pm.test(\"Status code is 401 - expired key\", function () {\r",
											"//     pm.sendRequest({\r",
											"//         url: pm.environment.get('baseUrl')+\"v1/users/\"+pm.environment.get('user_id'),\r",
											"//         method: 'PATCH',\r",
											"//         header: {\r",
											"//             'Content-Type': 'application/json',\r",
											"//             'Authorization': 'Bearer ' + pm.globals.get('APIkeyExpired')\r",
											"//         },\r",
											"//         body: {\r",
											"//             mode: 'raw',\r",
											"//             raw: JSON.stringify({\r",
											"//                 \"first_name\": \"Alex\",\r",
											"//                 \"surname\": \"Coello\",\r",
											"//                 \"email\": \"acoello@fido.tech\",\r",
											"//                 \"LOM\": \"\",\r",
											"//                 \"phone\": \"07563823044\"})\r",
											"//         },\r",
											"//     }, function(err, res) {\r",
											"//             // pm.expect(err).to.not.be.ok;\r",
											"//             res.code = 401;\r",
											"//             pm.expect(res.text()).to.include(\"expired\");\r",
											"//         }\r",
											"// )\r",
											"// });\r",
											"\r",
											"// pm.test(\"Status code is 401 - Email already exists\", function () {\r",
											"//     pm.sendRequest({\r",
											"//         url: pm.environment.get('baseUrl')+\"v1/users/\" + pm.environment.get('user_id'),\r",
											"//         method: 'PATCH',\r",
											"//         header: {\r",
											"//             'Content-Type': 'application/json',\r",
											"//             'Authorization': 'Bearer ' + pm.globals.get('APIkey')\r",
											"//         },\r",
											"//         body: {\r",
											"//             mode: 'raw',\r",
											"//             raw: JSON.stringify({\r",
											"//                 \"email\": \"alexcoeari73@gmail.com\"})\r",
											"//         },\r",
											"//     }, function(err, res) {\r",
											"//             // pm.expect(err).to.not.be.ok;\r",
											"//             console.log(res.text());\r",
											"//             res.code = 401;\r",
											"//             pm.expect(res.text()).to.include(\"already in the DB\");\r",
											"//         }\r",
											"// )\r",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "adfa00d8-79c1-4115-842c-7b7fdc4d2317",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"{{$randomFirstName}}\",\r\n    \"surname\":\"{{$randomLastName}}\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users/{{user_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										"{{user_id}}"
									]
								},
								"description": "# Update an user for the current organization.\n\n## **We need to pass the user data in the request body.**\n\n## Parameter\n ********* \n**user_id**: str  \n&emsp;User id for the user to be modified\n\n## Returns\n ********* \n**Modified User**"
							},
							"response": [
								{
									"id": "15f3e5ec-4bf9-473a-9076-0c22989a7c55",
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"first_name\": \"deserunt sit et\",\n  \"surname\": \"mollit sit sint commodo\",\n  \"email\": \"8mDat@ihVc.lge\",\n  \"LOM\": \"in sed\",\n  \"phone\": \"occaecat ut sed Duis\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "do pariatur",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"user_id\": \"12345\",\n  \"first_name\": \"Stanislaw\",\n  \"surname\": \"Lem\",\n  \"company\": \"MartianWaterCompany\",\n  \"email\": \"slem@martianwater.mart\",\n  \"LOM\": \"\",\n  \"phone\": \"0123456789\"\n}"
								},
								{
									"id": "0a96ded1-5a1a-4da6-9d44-82091605a3a6",
									"name": "Validation Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"first_name\": \"deserunt sit et\",\n  \"surname\": \"mollit sit sint commodo\",\n  \"email\": \"8mDat@ihVc.lge\",\n  \"LOM\": \"in sed\",\n  \"phone\": \"occaecat ut sed Duis\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "do pariatur",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "e23272af-f6cd-4c75-aa00-9208510632f6"
				},
				{
					"name": "devices/bugs",
					"item": [
						{
							"name": "last seen",
							"item": [
								{
									"name": "Bugs Last Seen",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e021a6ae-ff52-4336-817a-489c329dbd79",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "73b9c631-4267-418e-92ec-336cbf0d12ed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/devices/bugs/last_seen/?date_from=2022-06-26&date_to=2022-07-26",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"devices",
												"bugs",
												"last_seen",
												""
											],
											"query": [
												{
													"key": "date_from",
													"value": "2022-06-26",
													"description": "yyyy-mm-dd"
												},
												{
													"key": "date_to",
													"value": "2022-07-26",
													"description": "yyyy-mm-dd"
												}
											]
										},
										"description": "# Returns the last seen information for a given dates and for a given company.\n\n## Parameter\n ******** \n**date_from**: datetime.date    \n&emsp;First day included\n\n**date_to**: datetime.date   \n&emsp;Last day included\n\n## Returns\n ******** \n**List[BugActivity]**"
									},
									"response": [
										{
											"id": "d58a2cf9-4c3c-4857-b9fa-ee5aa55b3e86",
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/last_seen/?date_from=2022-06-26&date_to=2022-07-26",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"last_seen",
														""
													],
													"query": [
														{
															"key": "date_from",
															"value": "2022-06-26"
														},
														{
															"key": "date_to",
															"value": "2022-07-26"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n  {\n    \"bug_name\": \"bug:name\",\n    \"id\": 0,\n    \"scan_id\": 0,\n    \"user_id\": \"x6xx\",\n    \"device_id\": \"AA:AA:AA:AA:AA\",\n    \"latitude\": 55.333443,\n    \"longitude\": -20.4567,\n    \"self_test\": 0,\n    \"battery_voltage\": 3.5,\n    \"logger_status\": 0,\n    \"address\": \"111 Main Road\",\n    \"postcode\": \"AA34 BBB\",\n    \"country_code\": \"UK\",\n    \"hardware_code\": \"1.1.1\",\n    \"app_version\": \"1.1.1\",\n    \"phone_brand\": \"xphone\",\n    \"phone_model\": \"xphone 00\",\n    \"phone_platform\": \"xos\",\n    \"who\": \"Forename Surname\",\n    \"company\": \"Company 1\",\n    \"date\": \"2022-06-10\",\n    \"local_time\": \"2022-06-10 01:00:00\"\n  },\n  {\n    \"bug_name\": \"bug:name\",\n    \"id\": 0,\n    \"scan_id\": 0,\n    \"user_id\": \"x6xx\",\n    \"device_id\": \"AA:AA:AA:AA:AA\",\n    \"latitude\": 55.333443,\n    \"longitude\": -20.4567,\n    \"self_test\": 0,\n    \"battery_voltage\": 3.5,\n    \"logger_status\": 0,\n    \"address\": \"111 Main Road\",\n    \"postcode\": \"AA34 BBB\",\n    \"country_code\": \"UK\",\n    \"hardware_code\": \"1.1.1\",\n    \"app_version\": \"1.1.1\",\n    \"phone_brand\": \"xphone\",\n    \"phone_model\": \"xphone 00\",\n    \"phone_platform\": \"xos\",\n    \"who\": \"Forename Surname\",\n    \"company\": \"Company 1\",\n    \"date\": \"2022-06-10\",\n    \"local_time\": \"2022-06-10 01:00:00\"\n  }\n]"
										},
										{
											"id": "3fe98090-8700-45b3-b93a-017d62bbe1fa",
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/last_seen/?date_from=2022-06-26&date_to=2022-07-26",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"last_seen",
														""
													],
													"query": [
														{
															"key": "date_from",
															"value": "2022-06-26"
														},
														{
															"key": "date_to",
															"value": "2022-07-26"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Bugid Last Seen",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7efaba8e-5304-452a-9444-1b94b05e3bdd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bf984511-9d1a-4e1d-a248-98cc09f1102a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/devices/bugs/last_seen/:device_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"devices",
												"bugs",
												"last_seen",
												":device_id"
											],
											"variable": [
												{
													"key": "device_id",
													"value": "FA:6F:A7:5B:98:33",
													"description": "(Required) "
												}
											]
										},
										"description": "# Returns the last seen information for a given device for the company.\n\n## Parameter\n ********* \n**device_id**: str  \n&emsp;Device ID\n\n## Returns\n ********* \n**BugLastSeen**"
									},
									"response": [
										{
											"id": "cf4b75c9-fb3d-4f2c-a1a2-49bd0ed90a5c",
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/last_seen/:device_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"last_seen",
														":device_id"
													],
													"variable": [
														{
															"key": "device_id",
															"value": "Duis",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"bug_name\": \"bug:name\",\n  \"id\": 0,\n  \"scan_id\": 0,\n  \"user_id\": \"x6xx\",\n  \"device_id\": \"AA:AA:AA:AA:AA\",\n  \"latitude\": 55.333443,\n  \"longitude\": -20.4567,\n  \"self_test\": 0,\n  \"battery_voltage\": 3.5,\n  \"logger_status\": 0,\n  \"address\": \"111 Main Road\",\n  \"postcode\": \"AA34 BBB\",\n  \"country_code\": \"UK\",\n  \"hardware_code\": \"1.1.1\",\n  \"app_version\": \"1.1.1\",\n  \"phone_brand\": \"xphone\",\n  \"phone_model\": \"xphone 00\",\n  \"phone_platform\": \"xos\",\n  \"who\": \"Forename Surname\",\n  \"company\": \"Company 1\",\n  \"date\": \"2022-06-10\",\n  \"local_time\": \"2022-06-10 01:00:00\"\n}"
										},
										{
											"id": "d9cac30b-93e7-4f1e-8ec8-d19f766e99fb",
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/last_seen/:device_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"last_seen",
														":device_id"
													],
													"variable": [
														{
															"key": "device_id",
															"value": "Duis",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "b5335e54-307d-4d73-b4c4-2afd63f77de4"
						},
						{
							"name": "recordings",
							"item": [
								{
									"name": "{recording id}",
									"item": [
										{
											"name": "Download Audio",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4823718-9f1e-486f-b8e8-a3ebd57bc72c",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "6814e437-c67d-4f3a-8015-3a29fdb24760",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/audio/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"recordings",
														":recording_id",
														"audio",
														""
													],
													"variable": [
														{
															"key": "recording_id",
															"value": "38131",
															"description": "(Required) "
														}
													]
												},
												"description": "# Download audio recording for a given recording ID\n\n## Parameters\n ******* \n**recording_id** : int, optional    \n&emsp;The ID of the recording to get\n\n**session** : Session, optional    \n&emsp;Injected session object\n\n## Returns\n ********* \n**FileResponse**    \n&emsp;Returning the link to download the audio file"
											},
											"response": [
												{
													"id": "a035e62c-4faf-46eb-ad71-209277a6e3e2",
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/audio/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"devices",
																"bugs",
																"recordings",
																":recording_id",
																"audio",
																""
															],
															"variable": [
																{
																	"key": "recording_id",
																	"value": "-8749616",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{}"
												},
												{
													"id": "a872718f-98e7-4b16-8735-f9da69712762",
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/audio/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"devices",
																"bugs",
																"recordings",
																":recording_id",
																"audio",
																""
															],
															"variable": [
																{
																	"key": "recording_id",
																	"value": "-8749616",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Download Stft",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7e1b3a84-4853-440d-ab2a-b3f49d026222",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2b220006-ef95-47e3-94d7-75b2a4ac9295",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/stft/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"recordings",
														":recording_id",
														"stft",
														""
													],
													"variable": [
														{
															"key": "recording_id",
															"value": "38131",
															"description": "(Required) "
														}
													]
												},
												"description": "# Download Short-Time Fourier Transformation for a given recording ID\n\n## Parameters\n ******* \n**recording_id** : int, optional    \n&emsp;The ID of the recording to get\n\n**session** : Session, optional    \n&emsp;Injected session object\n\n## Returns\n ********* \n**FileResponse**    \n&emsp;Returning the link to download the stft file"
											},
											"response": [
												{
													"id": "a10ce215-a650-4624-9c0c-f29c757dbcbc",
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/stft/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"devices",
																"bugs",
																"recordings",
																":recording_id",
																"stft",
																""
															],
															"variable": [
																{
																	"key": "recording_id",
																	"value": "-8749616",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{}"
												},
												{
													"id": "31a828ce-dbff-4e5d-93f2-f3cb9453e8fe",
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/stft/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"devices",
																"bugs",
																"recordings",
																":recording_id",
																"stft",
																""
															],
															"variable": [
																{
																	"key": "recording_id",
																	"value": "-8749616",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Download Psd",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4ae3bf9d-d5af-49d2-b934-3910d5a249cd",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "15b8edcf-e166-4221-a0da-60899eb356b4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/psd/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"recordings",
														":recording_id",
														"psd",
														""
													],
													"variable": [
														{
															"key": "recording_id",
															"value": "38131",
															"description": "(Required) "
														}
													]
												},
												"description": "# Download Power Spectral Density for a given recording ID\n\n## Parameters\n ******* \n**recording_id** : int, optional    \n&emsp;The ID of the recording to get\n\n**session** : Session, optional    \n&emsp;Injected session object\n\n## Returns\n ********* \n**FileResponse**    \n&emsp;Returning the link to download the psd file"
											},
											"response": [
												{
													"id": "35576c26-b8b1-4a43-a4de-43c75bff648b",
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/psd/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"devices",
																"bugs",
																"recordings",
																":recording_id",
																"psd",
																""
															],
															"variable": [
																{
																	"key": "recording_id",
																	"value": "-8749616",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{}"
												},
												{
													"id": "9e60b82d-22c4-4b1c-8de3-d7164d11d3c7",
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/psd/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"devices",
																"bugs",
																"recordings",
																":recording_id",
																"psd",
																""
															],
															"variable": [
																{
																	"key": "recording_id",
																	"value": "-8749616",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Download All",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "20d74603-7162-4510-9cd6-263170d089bf",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3f23cad1-7a44-4634-9c3c-c427490794a9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/all/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"recordings",
														":recording_id",
														"all",
														""
													],
													"variable": [
														{
															"key": "recording_id",
															"value": "38131",
															"description": "(Required) "
														}
													]
												},
												"description": "# Download Short-Time Fourier Transformation(stft .png), Power Spectral Density (psd .png)     \n# and Sound file (.wav) for a given recording ID\n\n## Parameters\n ******* \n**recording_id** : int, optional    \n&emsp;The ID of the recording to get\n\n**session** : Session, optional    \n&emsp;Injected session object\n\n## Returns\n ********* \n**StreamingResponse**    \n&emsp;Returning the Zip file with the three files included"
											},
											"response": [
												{
													"id": "bca91829-4e91-471f-ae8d-5afab105f47c",
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/all/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"devices",
																"bugs",
																"recordings",
																":recording_id",
																"all",
																""
															],
															"variable": [
																{
																	"key": "recording_id",
																	"value": "-16249518",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{}"
												},
												{
													"id": "1b22ccfb-a864-4825-b5fe-f416af621ef6",
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/devices/bugs/recordings/:recording_id/all/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"devices",
																"bugs",
																"recordings",
																":recording_id",
																"all",
																""
															],
															"variable": [
																{
																	"key": "recording_id",
																	"value": "-16249518",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "0d7411b5-beaa-4a89-b8ec-e6d4c192a80d"
								},
								{
									"name": "List Of Recordings",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e03336e4-fa66-4f3b-83dc-8c8ce3fcf72f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "42865fa7-33aa-4a43-8783-78432253ab91",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/devices/bugs/recordings/list?date_from=2022-06-26&date_to=2022-07-26",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"devices",
												"bugs",
												"recordings",
												"list"
											],
											"query": [
												{
													"key": "date_from",
													"value": "2022-06-26",
													"description": "yyyy-mm-dd"
												},
												{
													"key": "date_to",
													"value": "2022-07-26",
													"description": "yyyy-mm-dd"
												}
											]
										},
										"description": "# Returns the list of Recordings for the company.\n\n## Parameters\n ******* \n**session**: Session    \n&emsp;DB session\n\n**date_from**: datetime.date             \n&emsp;First day included\n\n**date_to**: datetime.date             \n&emsp;Last day included\n\n## Returns\n -------- \nList[BugRecording]    "
									},
									"response": [
										{
											"id": "eb08d088-d2ed-453e-b2c1-d37e89256544",
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/recordings/list?date_from=2022-06-26&date_to=2022-07-26",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"recordings",
														"list"
													],
													"query": [
														{
															"key": "date_from",
															"value": "2022-06-26"
														},
														{
															"key": "date_to",
															"value": "2022-07-26"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n  {\n    \"device_id\": \"XX:XX:XX:XX:XX\",\n    \"sample_rate\": 0,\n    \"address\": \"1, Trafalgar Square\",\n    \"latitude\": 0,\n    \"longitude\": 0,\n    \"country_code\": \"gb\",\n    \"what3words\": \"word1.word2.word3\",\n    \"timestmp\": \"2021-09-22 09:21:35\",\n    \"audio_link\": \"https://storage.googleapis.com/ble-recordings/00000/audio_int16.wav\",\n    \"psd_link\": \"https://storage.googleapis.com/ble-recordings/00000/psd.png\",\n    \"stft_link\": \"https://storage.googleapis.com/ble-recordings/00000/stft.png\",\n    \"company\": \"Company name\",\n    \"who\": \"Name Surname\",\n    \"user_id\": \"xxxx\"\n  },\n  {\n    \"device_id\": \"XX:XX:XX:XX:XX\",\n    \"sample_rate\": 0,\n    \"address\": \"1, Trafalgar Square\",\n    \"latitude\": 0,\n    \"longitude\": 0,\n    \"country_code\": \"gb\",\n    \"what3words\": \"word1.word2.word3\",\n    \"timestmp\": \"2021-09-22 09:21:35\",\n    \"audio_link\": \"https://storage.googleapis.com/ble-recordings/00000/audio_int16.wav\",\n    \"psd_link\": \"https://storage.googleapis.com/ble-recordings/00000/psd.png\",\n    \"stft_link\": \"https://storage.googleapis.com/ble-recordings/00000/stft.png\",\n    \"company\": \"Company name\",\n    \"who\": \"Name Surname\",\n    \"user_id\": \"xxxx\"\n  }\n]"
										},
										{
											"id": "c0e64009-9ac7-473f-a152-3b606d183896",
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/devices/bugs/recordings/list?date_from=2022-06-26&date_to=2022-07-26",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"devices",
														"bugs",
														"recordings",
														"list"
													],
													"query": [
														{
															"key": "date_from",
															"value": "2022-06-26"
														},
														{
															"key": "date_to",
															"value": "2022-07-26"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "4949114a-c9b4-4366-bdb8-174751e315a3"
						},
						{
							"name": "Bugs Activity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e987b1a3-ca5b-44d4-853b-c98642e1ace3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6afddffe-250a-487c-92c9-9a63507cbe39",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/devices/bugs/activity/?date_from=2022-06-26&date_to=2022-07-26",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"devices",
										"bugs",
										"activity",
										""
									],
									"query": [
										{
											"key": "date_from",
											"value": "2022-06-26",
											"description": "yyyy-mm-dd"
										},
										{
											"key": "date_to",
											"value": "2022-07-26",
											"description": "yyyy-mm-dd"
										}
									]
								},
								"description": "# Returns the bug activity for the company.\n\n## Parameter\n ******** \n**date_from**: datetime.date   \n&emsp;First day included\n\n**date_to**: datetime.date   \n&emsp;Last day included\n\n## Returns\n ******** \n**List[BugActivity]**    "
							},
							"response": [
								{
									"id": "7fa2aea1-582a-4115-8413-cf6bd70d5db5",
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/devices/bugs/activity/?date_from=2022-06-26&date_to=2022-07-26",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"devices",
												"bugs",
												"activity",
												""
											],
											"query": [
												{
													"key": "date_from",
													"value": "2022-06-26"
												},
												{
													"key": "date_to",
													"value": "2022-07-26"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"fido_id\": \"nulla Ut incididunt culpa enim\",\n    \"company\": \"sunt laboris Excepteur\",\n    \"who\": \"reprehenderit pariatur Excepteur\",\n    \"event\": \"recording\",\n    \"device_id\": \"id veniam ipsum nisi\",\n    \"user_id\": \"nisi reprehenderit anim\",\n    \"timestmp\": \"1989-07-23T16:27:02.407Z\",\n    \"app_version\": \"i\",\n    \"hardware_version\": \"ullamco sit\",\n    \"latitude\": 13658440.2709734,\n    \"longitude\": 32371619.96260123,\n    \"postcode\": \"Lorem laboris velit\"\n  },\n  {\n    \"fido_id\": \"voluptate non ni\",\n    \"company\": \"est qui\",\n    \"who\": \"dolore laboris incididunt in officia\",\n    \"event\": \"logger\",\n    \"device_id\": \"sit ipsum Duis ex\",\n    \"user_id\": \"qui ea sunt\",\n    \"timestmp\": \"1969-04-27T19:49:54.935Z\",\n    \"app_version\": \"ut\",\n    \"hardware_version\": \"irure Duis minim Ut\",\n    \"latitude\": -96073104.59844522,\n    \"longitude\": -10781780.19086118,\n    \"postcode\": \"sed aliqua ipsum Ut\"\n  }\n]"
								},
								{
									"id": "188c1771-1ed4-48b3-8444-a3c92b228189",
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/devices/bugs/activity/?date_from=2022-06-26&date_to=2022-07-26",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"devices",
												"bugs",
												"activity",
												""
											],
											"query": [
												{
													"key": "date_from",
													"value": "2022-06-26"
												},
												{
													"key": "date_to",
													"value": "2022-07-26"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "51af65f7-bd51-4c4d-a69e-9c925485b5b9"
				},
				{
					"name": "Get Leak Alarm",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e6b2f2c-dfb0-4fac-aab0-18783778cc74",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7b5ab1f5-ac19-4759-8429-c37d43b971a5",
								"exec": [
									"// pm.test(\"Status code is 200 - Correct\", function () {\r",
									"//     pm.sendRequest({\r",
									"//         header: {\r",
									"//             'Content-Type': 'application/json',\r",
									"//             'Authorization': 'Bearer ' + pm.globals.get('APIkey')\r",
									"//         }\r",
									"//     }, function(err, res) {\r",
									"//             // pm.expect(err).to.not.be.ok;\r",
									"//             console.log(res.text());\r",
									"//             res.code = 400;\r",
									"//         }\r",
									"// )\r",
									"// });\r",
									"\r",
									"// pm.test(\"Status code is 401 - key expired\", function () {\r",
									"//     pm.sendRequest({\r",
									"//         url: pm.environment.get('baseUrl')+\"v1/leak_alarms/\",\r",
									"//         method: 'GET',\r",
									"//         header: {\r",
									"//             'Content-Type': 'application/json',\r",
									"//             'Authorization': 'Bearer ' + pm.globals.get('APIkeyExpired')\r",
									"//         }\r",
									"//     }, function(err, res) {\r",
									"//             // pm.expect(err).to.not.be.ok;\r",
									"//             console.log(res.text());\r",
									"//             res.code = 401;\r",
									"//             pm.expect(res.text()).to.include(\"API key is expired\");\r",
									"//         }\r",
									"// )\r",
									"// });\r",
									"\r",
									"\r",
									"// pm.test(\"Status code is 401 - wrong key\", function () {\r",
									"//     pm.sendRequest({\r",
									"//         url: pm.environment.get('baseUrl')+\"v1/leak_alarms/\",\r",
									"//         method: 'GET',\r",
									"//         header: {\r",
									"//             'Content-Type': 'application/json',\r",
									"//             'Authorization': 'Bearer wrongkey'\r",
									"//         }\r",
									"//     }, function(err, res) {\r",
									"//             // pm.expect(err).to.not.be.ok;\r",
									"//             // console.log(res.text());\r",
									"//             res.code = 401;\r",
									"//             pm.expect(res.text()).to.include(\"API key is incorrect\");\r",
									"//         }\r",
									"// )\r",
									"// });\r",
									"\r",
									"\r",
									"// pm.test(\"Status code is 401 - missing key\", function () {\r",
									"//     pm.sendRequest({\r",
									"//         url: pm.environment.get('baseUrl')+\"v1/leak_alarms/\",\r",
									"//         method: 'GET',\r",
									"//         header: {\r",
									"//             'Content-Type': 'application/json',\r",
									"//             'Authorization': ''\r",
									"//         }\r",
									"//     }, function(err, res) {\r",
									"//             // pm.expect(err).to.not.be.ok;\r",
									"//             console.log(res.text());\r",
									"//             res.code = 401;\r",
									"//             pm.expect(res.text()).to.include(\"Missing\");\r",
									"//         }\r",
									"// )\r",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ce8fd70d-2413-4f59-a91b-85e6d0158946",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/leak_alarms/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"leak_alarms",
								""
							]
						},
						"description": "# Returns the list of the Leak Alarms. The leak alarm is the function in the FIDOApp \n# enabling water engineers to mark their current location as the point of interest POI.  \n\n## Returns\n ********* \n**List[LeakAlarm]**"
					},
					"response": [
						{
							"id": "169b88b4-3150-47f6-9ea6-58cc97f4d6d8",
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/leak_alarms/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"leak_alarms",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"user_id\": \"gtf45r\",\n    \"asset_id\": \"egrty\",\n    \"notes\": \"This is an important note\",\n    \"latitude\": 54.2345,\n    \"longitude\": 18.3423,\n    \"created_at\": \"2021-10-23 13:12:34\",\n    \"address\": \"23 Regent Street, London\",\n    \"postcode\": \"WE12 4FG\",\n    \"company\": \"ACME\",\n    \"who\": \"Damon Hill\"\n  },\n  {\n    \"user_id\": \"gtf45r\",\n    \"asset_id\": \"egrty\",\n    \"notes\": \"This is an important note\",\n    \"latitude\": 54.2345,\n    \"longitude\": 18.3423,\n    \"created_at\": \"2021-10-23 13:12:34\",\n    \"address\": \"23 Regent Street, London\",\n    \"postcode\": \"WE12 4FG\",\n    \"company\": \"ACME\",\n    \"who\": \"Damon Hill\"\n  }\n]"
						}
					]
				},
				{
					"name": "Predict",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b3b70b8-aa7f-4d9b-a765-41a334f64d9d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "57b719e8-83fd-42f6-aec3-f7b9817e7b04",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"description": "(Required) ",
									"src": "/C:/Users/Alejandro/OneDrive - FIDO Tech Ltd/PyProjects/FIDOAPI/little_ann/sounds/leaks/Rec40732291.wav"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/v1/predict/?sensor=halma",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"predict",
								""
							],
							"query": [
								{
									"key": "sensor",
									"value": "halma"
								}
							]
						},
						"description": "# AI Prediction for the given file\n\n## Parameters\n ******** \n**file** : UploadFile   \n&emsp;File to upload to do the prediction\n\n**sensor** : SensorType, optional  \n&emsp;Sensor type, by default SensorType.halma\n\n## Returns\n ******* \n**Prediction**  \n&emsp;Prediction Schema"
					},
					"response": [
						{
							"id": "5d6b1271-0d38-4969-a9fa-760dd9222320",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"description": "(Required) ",
											"key": "file",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/predict/?sensor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"predict",
										""
									],
									"query": [
										{
											"key": "sensor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{}"
						},
						{
							"id": "d208fa73-e5d0-4468-9225-7c2f9ae887f9",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"description": "(Required) ",
											"key": "file",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/predict/?sensor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"predict",
										""
									],
									"query": [
										{
											"key": "sensor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"consequat enim in irure\",\n        \"labore molli\"\n      ],\n      \"msg\": \"nostrud fugiat do minim et\",\n      \"type\": \"amet cupidatat dolor incididunt aliquip\"\n    },\n    {\n      \"loc\": [\n        \"Excepteur in proi\",\n        \"aliqua\"\n      ],\n      \"msg\": \"veniam dolore\",\n      \"type\": \"enim\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "8a0f93cf-4632-4600-a860-2020d0e5747f"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{APIkey}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5d4a2f1f-87b5-4e16-a414-5ed398ab3ebc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e6126fd9-b506-48d2-aad4-44c3a1e6cd79",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}